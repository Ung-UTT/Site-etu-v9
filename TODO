Objectifs : Contrôleurs/Vues pour l'emploi du temps (Course + Timesheet + User) et les préférences

À faire :
=========

Ability
  Affiner les permissions selon les rôles

Annals

Association
  += logo
  Ajouter un rôle directement depuis page de l'Association

Authorization

Carpool

Category

Classified

Comment

Course

Document
  Image < Document
    Avec validation spéciale

Event
  += Ajouter à mon agenda (iCal, Google Calendar, …)
  += Inviter des gens
  += Réverser place
  += News (Daymail ?) associées
  += QR Code (toutes les pages)

Group

News
  /daymail/send éxécuté par un bot qui a les droits, une fois par jour à 4h du mat'
  Validation par modérateurs

Preference

Project

Quote

Reminder

Role

TimeSheet

User
  += infos via LDAP (avatar, UVs, …) (dump à faire)

UserSession

-------------------------

/!\ Facile (mais souvent long) ! /!\
  Des tests ! Beaucoup de tests !
  De superbes fixtures évoluées qui font comme si le site existe vraiment
  (+ commentaires, + utilisateurs, + participants (assos, événements, rôles), …)
  Mettre des valeurs par défaut aux champs (via migrations directement)
  API : Tout tester, ajouter formats, infos, …

  Helper pour afficher la date

Plus dur :
  Utiliser les factory ! (les fixtures de base ne font pas appel aux callbacks des modéles)
  Agenda en page d'accueil (événements surtout)
  « J'ai oublié mon mot de passe » : Par ent ? (ou regénérer mot de passe pour compte du site étu)
  Rails 3.1 (dès que disponible sur rubygems)

Beaucoup plus dur :
  Refactoriser code grâce à des modules, des controlleurs, des helpers, …

`git grep TODO` pour voir les petites modifications à faire

À préciser :
============

* Éditeur WYSIWYG : Truc perso se basant sur un truc tout simple (le plus dur étant la gestion des documents)
* Mails : frame vers Roundcube ? Truc basé sur une gem Ruby ?
* Préférences utilisateur (dont menu) : quoi ? les cases pour le Daymail, … ?
  * Choix de mot-clefs pour citations (tooltype, sex, …)
* BuckUTT : Code BuckUTT → Voir solde, Recharger → (service de payement de la banque ?) (frame)
* Forum : Shapardo (ou pas) avec le plugin d'authentification qui va bien (?)
* Recherche : Globale + Trombi (dans home pour la recherche globale, et dans user pour le trombi) (like % % ?, ou gem ?)
* Qui a vu qui : (pour classement trombi)
    La première fois qu'un utilisateur voir quelqu'un, un relation est crée (user_id, viewer_id)
    Reste plus qu'à récupérer User.find_each … viewers.size … .sort
    Remise à 0 tout les semestres
* Ressources (Avec Cours/Exercices/Annales/…) (tendu niveau droits d'auteur) (remplacer annales par ça, avec catégories)
* Sondages
* Album Photo : Chaque utilisateur peut avoir des photos, chaque photo a des tags, ce qui permet de faire des albums par tags

== Gems utiles ? ==

=== Sûr ! ===
* Gestion de projets : redmine (et/ou truc perso)
* Déploiement : capistrano (git push ?)
* Serveur : passenger ou thin

=== Peut-être… ===
* Calendrier : event_calendar (pour l'afficher)
* E-commerce (ZeShop, places aux événements, …) : active_merchant
* Interface d'administration : rails_admin (ou rails console :D)
* Gestion des menus de navigation : simple-navigation
* Statistiques : statistics
* RSS : feedzirra
* Tests avec cucumber ou rspec (et factories avec factory_girl)
* Wiki : gollum
* Manipulation d'images : mini_magick

* Sous-domaines : subdomain-fu (journal.etu.utt.fr, bde.etu.utt.fr ?)
* Commentaires avec des fils de discussions ? : acts_as_commentable_with_threading
* Sécurité : loofah
* Monitoring : god
* Générateur de mini-sites : jekyll
* Vues (plus simples pour les développeurs mais pas pour les graphistes) : haml (pareil pour css/scss et js/coffee)

=== Pour le fun :) ===
* Présentations faîtes depuis site étu : showoff
* IRC Bot : autumn
